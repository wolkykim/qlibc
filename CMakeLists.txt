CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(qlibc C)

INCLUDE_DIRECTORIES(${qlibc_SOURCE_DIR}/include/qlibc)
INCLUDE_DIRECTORIES(${qlibc_SOURCE_DIR}/src/internal)

# Tell CMake we will use CTest
ENABLE_TESTING()

# Tell CMake there is a CMakeLists.txt in the tests/ directory
ADD_SUBDIRECTORY(tests)

SET(SRC_SUBPATHS
		containers/*.c 
		utilities/*.c 
		ipc/*.c 
		internal/*.c)

SET(SRC_SUBPATHS_EXT
		extensions/*.c)

SET(SRC_PATHS src)

IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	SET(SRC_PATHS ${SRC_PATHS} src/os/linux src/os/nix)
ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Windows")
	SET(SRC_PATHS ${SRC_PATHS} src/os/windows)
ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
	SET(SRC_PATHS ${SRC_PATHS} src/os/nix)
ENDIF()

FOREACH(TMP_path IN LISTS SRC_PATHS)
	FOREACH(TMP_subpath IN LISTS SRC_SUBPATHS)
		SET(TMP_search_path "${TMP_path}/${TMP_subpath}")
		SET(SRC_SEARCH_PATHS ${SRC_SEARCH_PATHS} ${TMP_search_path})
	ENDFOREACH(TMP_subpath)
ENDFOREACH()

FOREACH(TMP_path IN LISTS SRC_PATHS)
	FOREACH(TMP_subpath IN LISTS SRC_SUBPATHS_EXT)
		SET(TMP_search_path "${TMP_path}/${TMP_subpath}")
		SET(SRC_SEARCH_PATHS_EXT ${SRC_SEARCH_PATHS_EXT} ${TMP_search_path})
	ENDFOREACH(TMP_subpath)
ENDFOREACH()

FILE(GLOB_RECURSE SRC_LIB 
		${SRC_SEARCH_PATHS})

FILE(GLOB_RECURSE SRC_LIB_EXT 
		${SRC_SEARCH_PATHS_EXT})

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${qlibc_SOURCE_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${qlibc_SOURCE_DIR}/lib)

ADD_LIBRARY(qlibc-static STATIC ${SRC_LIB})
ADD_LIBRARY(qlibc SHARED ${SRC_LIB})

ADD_LIBRARY(qlibcext-static STATIC ${SRC_LIB_EXT})
ADD_LIBRARY(qlibcext SHARED ${SRC_LIB_EXT})
TARGET_LINK_LIBRARIES(qlibcext qlibc)
